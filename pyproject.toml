[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "megalinter"
dynamic = ["version"]
description = "MegaLinter"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [{ name = "Nicolas Vuillamy", email = "nicolas.vuillamy@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "azure-devops==6.0.0b4",
  "commentjson",
  "gitpython",
  "importlib-metadata>=3.10; python_version < '3.9'",
  "jsonpickle",
  "multiprocessing_logging",
  "pychalk",
  "pygithub",
  "pytablewriter",
  "python-gitlab",
  "pyyaml",
  "redis",
  "regex",
  "requests",
  "terminaltables",
  "urllib3",
]

[project.urls]
Homepage = "https://megalinter.io/"
Documentation = "https://megalinter.io/"
Repository = "https://github.com/oxsecurity/megalinter.git"
Source = "https://github.com/oxsecurity/megalinter"
Issues = "https://github.com/oxsecurity/megalinter/issues"
Changelog = "https://github.com/oxsecurity/megalinter/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "megalinter/__about__.py"

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "markdown",
  "mike",
  "mkdocs-material",
  "pymdown-extensions",
  "mkdocs-glightbox==0.3.2",
  "mdx_truly_sane_lists",
  "jsonschema",
  "json-schema-for-humans",
  "giturlparse",
  "webpreview",
  "github-dependents-info",
]
[tool.hatch.envs.docs.scripts]
# build = "mkdocs build --clean --strict"
build = "mkdocs build --clean"
serve = "mkdocs serve --dev-addr localhost:8000"

[tool.hatch.envs.hatch-test]
default-args = [""]
randomize = true
parallel = true
retries = 2
# # Prettify `search_index.json` after `mkdocs`
# # `mkdocs` removed its own prettify few years ago: https://github.com/mkdocs/mkdocs/pull/1128
# if type python3 >/dev/null 2>/dev/null; then
#   python3 -m json.tool ./site/search/search_index.json >./site/search/search_index_new.json
# else
#   python -m json.tool ./site/search/search_index.json >./site/search/search_index_new.json
# fi
# mv -f -- ./site/search/search_index_new.json ./site/search/search_index.json
[tool.hatch.envs.build]
template = "docs"
[tool.hatch.envs.build.scripts]
prettify = "hatch run python -m json.tool --sort-keys --no-indent ./site/search/search_index.json ./site/search/search_index.json"
all = ["build --doc --stats --dependents {args}", "hatch run docs:build"]
build-sh = "./build.sh {args}"
build = "hatch run python .automation/build.py {args}"
docs = ["./build.sh --doc {args}", "hatch run docs:build"]
stats = "build --stats"
ed = "hatch run python .automation/build.py --changelog {args}"
ed1 = "hatch run python -c 'print(\"hello!\")'"
ed2 = "hatch run python .automation/build.py --changelog"
ed3 = ['ed', "ed1", "docs:build"]
ed4 = [
  "hatch run python -m json.tool --sort-keys --no-indent ./search_index_copy_2.json ./search_index_copy_2.json",
]
[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:megalinter}"

[tool.coverage.run]
source_pkgs = ["megalinter"]
branch = true
parallel = true
omit = ["megalinter/__about__.py"]

[tool.coverage.paths]
megalinter = ["megalinter", "*/megalinter/megalinter"]
tests = [".automation/test", "*/megalinter/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
src = ["megalinter"]
extend-exclude = [".automation/test"]
