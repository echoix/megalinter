name: Slash Command Dispatch
on:
  issue_comment:
    types: [created]
jobs:
  slashCommandDispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Dump the event payload context
        env:
          EVENT_CONTEXT: ${{ toJson(github.event) }}
        run: echo "$EVENT_CONTEXT"
      - uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch
      - uses: actions/github-script@v6
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.rest.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - name: Dump the get-pr payload context
        env:
          GETPR_CONTEXT: ${{ toJson(steps.get-pr.outputs.result) }}
        run: echo "$GETPR_CONTEXT"
      - run: echo "$GETPR_REF"
        env: 
          GETPR_REF: ${{ steps.get-pr.outputs.result.head.ref }}
      - run: echo "$GETPR_REPO"
        env: 
          GETPR_REPO: ${{ steps.get-pr.outputs.result.head.repo.full_name }}
      - name: Slash Command Dispatch PR
        uses: peter-evans/slash-command-dispatch@v3
        id: scd
        if: success()
        with:
          token: ${{ secrets.PAT }}
          commands: |
            build
            help
          issue-type: pull-request
          dispatch-type: workflow
          static-args: |
            repository=${{ github.repository }}
            comment-id=${{ github.event.comment.id }}
            issue-number=${{ github.event.issue.number }}
            actor=${{ github.actor }}
            checkout-ref=${{ steps.get-pr.outputs.result.head.ref }}
            checkout-repository=${{ steps.get-pr.outputs.result.head.repo.full_name }}
      - name: Edit comment with error message
        if: steps.scd.outputs.error-message
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ github.event.comment.id }}
          body: |
            > ${{ steps.scd.outputs.error-message }}